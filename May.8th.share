1.material开发规范
    
    css Modules (冲突 覆盖 全局污染)
    pages
        |---styles
        |---page1
            |---page1.js
            |---page1.scss(静态文件？？？--> static)
        
    bind的event 命名 onChange={this.handleXXXChange}
    
    constants.js 常量定义,保持数据一致性
        常量命名（=== or ==) 方便维护修改
           命名时注意类型，可以根据后台返回的类型来定义类型
    
    api 接口命名 ---> 尽量根据接口（getXXX,updateXXX,deleteXXX,addXXX）
    promise----> 不需要 try-catch，特殊情况（旧的接口、统一 try-catch 捕获时）可以使用
    
    修改公用组件、工具类，要通知到具体的维护人员（是否有必要修改）
        注释必须写
        @author...
        @params...
    
    eslint 格式
    数据mock,使用yapi
    
    models的使用：
        根据

2.SearchTable
  AdvancedForm

3.pull request

  Pull Request是如何工作的
    Pull Request 需要两个不同的分支或是两个不同的仓库,

    开发者在他们的本地仓库中为某个功能创建一个专门的分支。
    开发者将分支推送到公共的 GitHub 仓库。
    开发者用 GitHub 发起一个 Pull Request。
    其余的团队成员审查代码，讨论并且做出修改。
    项目维护者将这个功能并入官方的仓库，然后关闭这个 Pull Request
